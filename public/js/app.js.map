{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js","js/router.js","js/models/space.js","js/controllers/spaces.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","authenticate","provider","res","console","log","MainController","$rootScope","logout","secureState","e","toState","toParams","fromState","main","message","isAuthenticated","attemptedRoute","name","preventDefault","unprotectedStates","includes","isLoggedIn","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Space","$resource","id","update","method","SpacesIndexController","spacesIndex","all","query","SpacesNewController","create","save","spacesNew","space","SpacesShowController","deleteSpace","spacesShow","$remove","get","params","delete","SpacesEditController","spacesEdit","$update","User","UserProfileController","deleteUser","userProfile","getPayload","UserEditController","userEdit","angular","module","constant","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n.constant('API_URL', 'http://localhost:3000/api')\n.config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n.controller('RegisterController', RegisterController)\n.controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n    .then(() => {\n      $state.go('login');\n    });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('userProfile');\n    });\n  }\n\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then((res) => {\n      console.log(res);\n    });\n  }\n\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('finalProject')\n.controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('home');\n    });\n  }\n  // Ask Mike for seccont explanation\n  // -------------------------------->\n  const unprotectedStates = ['home', 'register', 'login'];\n  let attemptedRoute = null;\n\n  function secureState(e, toState, toParams, fromState) {\n    main.message = null;\n\n    if($auth.isAuthenticated() && attemptedRoute === 'spacesIndex' && toState.name === 'userProfile') {\n      e.preventDefault();\n      $state.go(attemptedRoute);\n      // console.log(attemptedRoute);\n      attemptedRoute = null;\n    }\n\n    if(!$auth.isAuthenticated() && !unprotectedStates.includes(toState.name)) {\n\n      if(fromState.name === 'home') attemptedRoute = toState.name;\n      // console.log(attemptedRoute);\n\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n    }\n  }\n// <-----------------------------------\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n.config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n  .state('home', {\n    url: '/',\n    templateUrl: '/templates/landingPage.html'\n  })\n  .state('userProfile', {\n    url: '/profile',\n    templateUrl: '/templates/userProfile.html',\n    controller: 'UserProfileController as userProfile'\n  })\n  .state('usersEdit', {\n    url: '/profile/edit',\n    templateUrl: '/templates/usersEdit.html',\n    controller: 'UsersEditController as usersEdit'\n  })\n  .state('register', {\n    url: '/register',\n    templateUrl: '/templates/register.html',\n    controller: 'RegisterController as register'\n  })\n  .state('login', {\n    url: '/login',\n    templateUrl: '/templates/login.html',\n    controller: 'LoginController as login'\n  })\n  .state('spacesIndex', {\n    url: '/spaces',\n    templateUrl: '/templates/spacesIndex.html',\n    controller: 'SpacesIndexController as spacesIndex'\n  })\n  .state('spacesShow', {\n    url: '/spaces/:id',\n    templateUrl: '/templates/spacesShow.html',\n    controller: 'SpacesShowController as show'\n  })\n  .state('spacesEdit', {\n    url: '/spaces/:id/edit',\n    templateUrl: '/templates/spacesEdit.html',\n    controller: 'SpacesEditController as spacesEdit'\n  });\n\n  $urlRouterProvider.otherwise('/');\n}\n","angular.module('finalProject')\n.factory('Space', Space);\n\nSpace.$inject = ['$resource', 'API_URL'];\nfunction Space($resource, API_URL) {\n  return new $resource(`${API_URL}/spaces/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n.controller('SpacesIndexController', SpacesIndexController)\n.controller('SpacesNewController', SpacesNewController)\n.controller('SpacesShowController', SpacesShowController)\n.controller('SpacesEditController', SpacesEditController);\n\nSpacesIndexController.$inject = ['Space'];\nfunction SpacesIndexController(Space) {\n  const spacesIndex = this;\n\n  spacesIndex.all = Space.query();\n}\n\nSpacesNewController.$inject = ['Space', '$state'];\nfunction SpacesNewController(Space, $state) {\n  const spacesNew = this;\n\n  spacesNew.space = {};\n\n  function create() {\n    Space.save(spacesNew.space, () => {\n      $state.go('spacesIndex');\n    });\n  }\n\n  spacesNew.create = create;\n}\n\nSpacesShowController.$inject = ['Space', '$state', '$auth'];\nfunction SpacesShowController(Space, $state , $auth) {\n  const spacesShow = this;\n\n  spacesShow.space = Space.get($state.params);\n\n  function deleteSpace() {\n    // console.log('I\\'m trying to delete a space...');\n    spacesShow.space.$remove(() => {\n      $state.go('spacesIndex');\n    });\n  }\n\n  spacesShow.delete = deleteSpace;\n  spacesShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nSpacesEditController.$inject = ['Space', '$state'];\nfunction SpacesEditController(Space, $state) {\n  const spacesEdit = this;\n\n  spacesEdit.space = Space.get($state.params);\n\n  function update() {\n    spacesEdit.space.$update(() => {\n      $state.go('spacesShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n.factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('UserProfileController', UserProfileController)\n  .controller('UserEditController', UserEditController);\n\nUserProfileController.$inject = ['User', '$state', '$auth'];\nfunction UserProfileController(User, $state , $auth) {\n  const userProfile = this;\n\n  userProfile.user = User.get({id: $auth.getPayload().id});\n\n  function deleteUser() {\n    // console.log('I\\'m trying to delete a user...');\n    userProfile.user.$remove(() => {\n      $state.go('home');\n    });\n  }\n\n  userProfile.delete = deleteUser;\n  userProfile.isLoggedIn = $auth.isAuthenticated;\n}\n\nUserEditController.$inject = ['User', '$state'];\nfunction UserEditController(User, $state) {\n  const userEdit = this;\n\n  userEdit.user = User.get($state.params);\n\n  function update() {\n    userEdit.user.$update(() => {\n      $state.go('userProfile', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n"]}