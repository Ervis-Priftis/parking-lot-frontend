{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/directives/googleMap.js","js/controllers/main.js","js/router.js","js/models/space.js","js/controllers/spaces.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","authenticate","provider","res","console","log","googleMap","$window","restrict","replace","template","scope","spaces","link","$scope","element","clearMarkers","markers","forEach","marker","setMap","map","google","maps","Map","center","lat","lng","zoom","minZoom","maxZoom","scrollwheel","mapTypeControl","styles","elementType","stylers","hue","saturation","lightness","gamma","featureType","weight","infoWindow","$watch","$resolved","space","Marker","position","animation","Animation","DROP","addListener","close","contentString","email","details","width","length","image","InfoWindow","content","open","push","googleplace","require","attrs","model","options","types","componentRestrictions","autocomplete","places","Autocomplete","place","getPlace","latlng","geometry","location","toJSON","$setViewValue","val","MainController","$rootScope","logout","secureState","e","toState","toParams","fromState","main","message","containerClass","name","isAuthenticated","attemptedRoute","preventDefault","unprotectedStates","includes","isLoggedIn","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Space","$resource","id","update","method","SpacesIndexController","spacesIndex","all","query","SpacesNewController","create","save","spacesNew","user_id","getPayload","SpacesShowController","User","deleteSpace","remove","reload","spacesShow","get","delete","SpacesEditController","spacesEdit","$update","params","UserProfileController","deleteUser","userProfile","$remove","UserEditController","userEdit","angular","module","constant","window","hostname","config","$inject","directive","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n.constant('API_URL', window.location.hostname === 'localhost' ? 'http://localhost:3000/api' : 'https://parking-lot-api.herokuapp.com/api')\n.config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n.controller('RegisterController', RegisterController)\n.controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n    .then(() => {\n      $state.go('home');\n    });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('userProfile');\n    });\n  }\n\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then((res) => {\n      console.log(res);\n    });\n  }\n\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('finalProject')\n.directive('googleMap', googleMap)\n.directive('googleplace', googleplace);\n\n\ngoogleMap.$inject = ['$window'];\nfunction googleMap($window) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"google-map\"></div>',\n    scope: {\n      spaces: '='\n    },\n    link: function($scope, element) {\n\n      const map = new $window.google.maps.Map(element[0], {\n        center: {\n          lat: 51.508530,\n          lng: -0.076132\n        },\n        zoom: 9,\n        minZoom: 6, // Minimum zoom level allowed (0-20)\n        maxZoom: 17, // Maximum soom level allowed (0-20)\n        scrollwheel: false,\n        mapTypeControl: false,\n        styles: [\n          {\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'hue': '#ff4400'\n              },\n              {\n                'saturation': -68\n              },\n              {\n                'lightness': -4\n              },\n              {\n                'gamma': 0.72\n              }\n            ]\n          },\n          {\n            'featureType': 'road',\n            'elementType': 'labels.icon'\n          },\n          {\n            'featureType': 'landscape.man_made',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'hue': '#0077ff'\n              },\n              {\n                'gamma': 3.1\n              }\n            ]\n          },\n          {\n            'featureType': 'water',\n            'stylers': [\n              {\n                'hue': '#00ccff'\n              },\n              {\n                'gamma': 0.44\n              },\n              {\n                'saturation': -33\n              }\n            ]\n          },\n          {\n            'featureType': 'poi.park',\n            'stylers': [\n              {\n                'hue': '#44ff00'\n              },\n              {\n                'saturation': -23\n              }\n            ]\n          },\n          {\n            'featureType': 'water',\n            'elementType': 'labels.text.fill',\n            'stylers': [\n              {\n                'hue': '#007fff'\n              },\n              {\n                'gamma': 0.77\n              },\n              {\n                'saturation': 65\n              },\n              {\n                'lightness': 99\n              }\n            ]\n          },\n          {\n            'featureType': 'water',\n            'elementType': 'labels.text.stroke',\n            'stylers': [\n              {\n                'gamma': 0.11\n              },\n              {\n                'weight': 5.6\n              },\n              {\n                'saturation': 99\n              },\n              {\n                'hue': '#0091ff'\n              },\n              {\n                'lightness': -86\n              }\n            ]\n          },\n          {\n            'featureType': 'transit.line',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'lightness': -48\n              },\n              {\n                'hue': '#ff5e00'\n              },\n              {\n                'gamma': 1.2\n              },\n              {\n                'saturation': -23\n              }\n            ]\n          },\n          {\n            'featureType': 'transit',\n            'elementType': 'labels.text.stroke',\n            'stylers': [\n              {\n                'saturation': -64\n              },\n              {\n                'hue': '#ff9100'\n              },\n              {\n                'lightness': 16\n              },\n              {\n                'gamma': 0.47\n              },\n              {\n                'weight': 2.7\n              }\n            ]\n          }\n        ]\n      });\n\n      let markers = [];\n      let infoWindow = null;\n\n      function clearMarkers() {\n        markers.forEach((marker) => {\n          marker.setMap(null);\n        });\n        markers = [];\n      }\n\n      $scope.$watch('spaces', () => {\n        clearMarkers();\n        if($scope.spaces.$resolved) {\n          $scope.spaces.forEach((space) => {\n            // console.log(space);\n            if(space.lat && space.lng) {\n              const marker = new\n              $window.google.maps.Marker({\n                position: { lat: space.lat, lng: space.lng },\n                map: map,\n                animation: $window.google.maps.Animation.DROP\n              });\n              marker.addListener('click', () => {\n                if(infoWindow) {\n                  infoWindow.close();\n                }\n\n                const contentString = `\n                <div class=\"infoWindow\">\n                <h4 class=\"contact\">Contact: <a href=\"mailto:${space.user.email}?subject=Query about your parking space\">${space.user.email}</a></h4>\n                <h4 class=\"details\">${space.details}</h4>\n                <h4 class=\"diameters\">Width: ${space.width} m<br>\n                Length: ${space.length} m</h4>\n                <img class=\"parking-photo\" src=${space.image} alt=\"Parking image missing\">\n                </div>`;\n\n                infoWindow = new $window.google.maps.InfoWindow({\n                  content: contentString\n                });\n\n                infoWindow.open(map, marker);\n                markers.push(marker);\n              });\n            }\n          });\n        }\n      }, true);\n    }\n  };\n}\n\n\n// Autocomplete BELOW\ngoogleplace.$inject = ['$window'];\nfunction googleplace($window) {\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    scope: {\n      spaces: '='\n    },\n    link: function(scope, element, attrs, model) {\n      const options = {\n        types: [],\n        componentRestrictions: {}\n      };\n\n      const autocomplete = new $window.google.maps.places.Autocomplete(element[0], options);\n\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        const latlng = place.geometry.location.toJSON();\n\n        scope.spaces.lat = latlng.lat;\n        scope.spaces.lng = latlng.lng;\n\n        console.log(place);\n        model.$setViewValue(element.val());\n      });\n    }\n  };\n}\n// Autocomplete ends\n","angular.module('finalProject')\n.controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('home');\n    });\n  }\n  // Ask Mike for seccont explanation\n  // -------------------------------->\n  const unprotectedStates = ['home', 'register', 'login'];\n  let attemptedRoute = null;\n\n  function secureState(e, toState, toParams, fromState) {\n    main.message = null;\n\n    main.containerClass = toState.name !== 'spacesIndex' ? true : false;\n\n    if($auth.isAuthenticated() && attemptedRoute === 'spacesIndex' && toState.name === 'userProfile') {\n      e.preventDefault();\n      $state.go(attemptedRoute);\n      // console.log(attemptedRoute);\n      attemptedRoute = null;\n    }\n\n    if(!$auth.isAuthenticated() && !unprotectedStates.includes(toState.name)) {\n\n      if(fromState.name === 'home') attemptedRoute = toState.name;\n      // console.log(attemptedRoute);\n\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n    }\n  }\n// <-----------------------------------\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n.config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n  .state('home', {\n    url: '/',\n    templateUrl: '/templates/landingPage.html'\n  })\n  .state('userProfile', {\n    url: '/profile',\n    templateUrl: '/templates/userProfile.html',\n    controller: 'UserProfileController as userProfile'\n  })\n  .state('usersEdit', {\n    url: '/profile/edit',\n    templateUrl: '/templates/userEdit.html',\n    controller: 'UserEditController as userEdit'\n  })\n  .state('register', {\n    url: '/register',\n    templateUrl: '/templates/register.html',\n    controller: 'RegisterController as register'\n  })\n  .state('login', {\n    url: '/login',\n    templateUrl: '/templates/login.html',\n    controller: 'LoginController as login'\n  })\n  .state('spacesIndex', {\n    url: '/spaces',\n    templateUrl: '/templates/spacesIndex.html',\n    controller: 'SpacesIndexController as spacesIndex'\n  })\n  .state('spacesAdd', {\n    url: '/spaces/add',\n    templateUrl: '/templates/spacesAdd.html',\n    controller: 'SpacesNewController as spacesNew'\n  })\n  .state('spacesEdit', {\n    url: '/spaces/:id/edit',\n    templateUrl: '/templates/spacesEdit.html',\n    controller: 'SpacesEditController as spacesEdit'\n  })\n  .state('spacesShow', {\n    url: '/spaces/show',\n    templateUrl: '/templates/spacesShow.html',\n    controller: 'SpacesShowController as spacesShow'\n  });\n\n  $urlRouterProvider.otherwise('/');\n}\n","angular.module('finalProject')\n.factory('Space', Space);\n\nSpace.$inject = ['$resource', 'API_URL'];\nfunction Space($resource, API_URL) {\n  return new $resource(`${API_URL}/spaces/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n.controller('SpacesIndexController', SpacesIndexController)\n.controller('SpacesNewController', SpacesNewController)\n.controller('SpacesShowController', SpacesShowController)\n.controller('SpacesEditController', SpacesEditController);\n\nSpacesIndexController.$inject = ['Space'];\nfunction SpacesIndexController(Space) {\n  const spacesIndex = this;\n\n  spacesIndex.all = Space.query();\n}\n\nSpacesNewController.$inject = ['Space', '$state', '$auth'];\nfunction SpacesNewController(Space, $state, $auth) {\n  const spacesNew = this;\n\n  spacesNew.spaces = {};\n  spacesNew.spaces.user_id = $auth.getPayload().id;\n\n  function create() {\n    Space.save(spacesNew.spaces, () => {\n      $state.go('spacesIndex');\n    });\n  }\n\n  spacesNew.create = create;\n}\n\nSpacesShowController.$inject = ['Space', 'User', '$state', '$auth'];\nfunction SpacesShowController(Space, User, $state , $auth) {\n  const spacesShow = this;\n\n  spacesShow.user = User.get({id: $auth.getPayload().id});\n\n  function deleteSpace(space) {\n    Space.remove({id: space.id}, () => {\n      $state.reload();\n    });\n  }\n\n  spacesShow.delete = deleteSpace;\n  spacesShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nSpacesEditController.$inject = ['Space', '$state'];\nfunction SpacesEditController(Space, $state) {\n  const spacesEdit = this;\n\n  spacesEdit.space = Space.get($state.params);\n\n  function update() {\n    spacesEdit.space.$update(() => {\n      $state.go('spacesShow');\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n.factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('UserProfileController', UserProfileController)\n  .controller('UserEditController', UserEditController);\n\nUserProfileController.$inject = ['User', '$state', '$auth'];\nfunction UserProfileController(User, $state , $auth) {\n  const userProfile = this;\n\n  userProfile.user = User.get({id: $auth.getPayload().id});\n\n  function deleteUser() {\n    userProfile.user.$remove(() => {\n      $state.go('home');\n    });\n  }\n\n  userProfile.delete = deleteUser;\n  userProfile.isLoggedIn = $auth.isAuthenticated;\n}\n\nUserEditController.$inject = ['User', '$state', '$auth'];\nfunction UserEditController(User, $state, $auth) {\n  const userEdit = this;\n\n  userEdit.user = User.get({ id: $auth.getPayload().id });\n\n  function update() {\n    userEdit.user.$update(() => {\n      $state.go('userProfile', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n"]}